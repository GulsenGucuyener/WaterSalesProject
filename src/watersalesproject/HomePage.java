package watersalesproject;

import connector.MySqlConnector;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author glsnn
 */
public class HomePage extends javax.swing.JFrame {

    private MySqlConnector mySqlConnector;
    private final String getAllCustomerQuery = "select `CustomerID`,`CustomerFirstName`,`CustomerLastName`,`CustomerAddress`,`CustomerPhone` from customers";
    private final String getAllOrdersQuery = "SELECT orders.OrderID, customers.CustomerFirstName, customers.CustomerLastName, orders.OrderAmount, customers.CustomerAddress, orders.OrderStatus FROM `orders` \n" +
"INNER JOIN customers ON orders.CustomerID = customers.CustomerID";
    private final String todayOrderWhere = " WHERE STR_TO_DATE(orders.OrderDate,'%d/%m/%Y') >= CURDATE();";

    public HomePage() {
        initComponents();
        refreshCustomerList(getAllCustomerQuery);
        refreshOrderList(getAllOrdersQuery);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        DeleteAllOrdersButton = new javax.swing.JButton();
        ShowTodayOrdersButton = new javax.swing.JButton();
        DeleteOrderButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        TextCustomerFirstName = new javax.swing.JTextField();
        TextCustomerLastName = new javax.swing.JTextField();
        jClearButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCustomer = new javax.swing.JTable();
        DeleteCustomerButton = new javax.swing.JButton();
        NewCustomerButton = new javax.swing.JButton();
        EditCustomerButton = new javax.swing.JButton();
        jRefreshButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableOrder = new javax.swing.JTable();
        RefreshOrdersButton = new javax.swing.JButton();
        TakeOrderButton = new javax.swing.JButton();
        DeliveredButton = new javax.swing.JButton();
        OnTheWayButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tablo İşlemleri"));
        jPanel2.setPreferredSize(new java.awt.Dimension(452, 70));

        DeleteAllOrdersButton.setText("Tümünü Sil");
        DeleteAllOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAllOrdersButtonActionPerformed(evt);
            }
        });

        ShowTodayOrdersButton.setText("Bu Günün Siparişleri");
        ShowTodayOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowTodayOrdersButtonActionPerformed(evt);
            }
        });

        DeleteOrderButton.setText("Sil");
        DeleteOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteOrderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(DeleteOrderButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteAllOrdersButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ShowTodayOrdersButton)
                .addGap(41, 41, 41))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ShowTodayOrdersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(DeleteOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(DeleteAllOrdersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Arama"));
        jPanel3.setEnabled(false);

        jLabel1.setText("Müşteri Adı");

        jLabel2.setText("Müşteri Soyadı");

        searchButton.setText("Ara");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        TextCustomerFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextCustomerFirstNameActionPerformed(evt);
            }
        });

        jClearButton.setText("Temizle");
        jClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                    .addComponent(TextCustomerFirstName))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextCustomerLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextCustomerFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Müşteriler"));

        jTableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableCustomer);

        DeleteCustomerButton.setText("Sil");
        DeleteCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteCustomerButtonActionPerformed(evt);
            }
        });

        NewCustomerButton.setText("MüşteriEkle");
        NewCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewCustomerButtonActionPerformed(evt);
            }
        });

        EditCustomerButton.setText("Düzenle");
        EditCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditCustomerButtonActionPerformed(evt);
            }
        });

        jRefreshButton.setText("Yenile");
        jRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jRefreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NewCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(EditCustomerButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EditCustomerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addComponent(DeleteCustomerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NewCustomerButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRefreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Siparişler"));

        jTableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableOrder);

        RefreshOrdersButton.setText("Yenile");
        RefreshOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshOrdersButtonActionPerformed(evt);
            }
        });

        TakeOrderButton.setText("Sipariş Ver");
        TakeOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TakeOrderButtonActionPerformed(evt);
            }
        });

        DeliveredButton.setText("Teslim Edildi");
        DeliveredButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeliveredButtonActionPerformed(evt);
            }
        });

        OnTheWayButton.setText("Yola Çıktı");
        OnTheWayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnTheWayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(RefreshOrdersButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TakeOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OnTheWayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeliveredButton)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OnTheWayButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(TakeOrderButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RefreshOrdersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DeliveredButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EditCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditCustomerButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)jTableCustomer.getModel();
        int selectedRowIndex = jTableCustomer.getSelectedRow();
        if(selectedRowIndex > 0) {
            NewCustomerPage newCustomerPage = new NewCustomerPage(model, selectedRowIndex);
            newCustomerPage.setVisible(true);
        }else{
                JOptionPane.showMessageDialog(this, "Lütfen müşteri seçiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);

        }
    }//GEN-LAST:event_EditCustomerButtonActionPerformed

    public void refreshCustomerList(String query){
        
        mySqlConnector = new MySqlConnector();
        
        String[] tableColumnsName = {"ID","Ad", "Soyad", "Adres", "Telefon"};
        DefaultTableModel dtm = (DefaultTableModel) jTableCustomer.getModel();
        dtm.setRowCount(0);
        DefaultTableModel aModel = (DefaultTableModel) jTableCustomer.getModel();
        aModel.setColumnIdentifiers(tableColumnsName);
        ResultSet rs = mySqlConnector.runQuery(query);
        try {
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (rs.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            mySqlConnector.close();
            jTableCustomer.setModel(aModel);
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    public void refreshOrderList(String query){
        
        mySqlConnector = new MySqlConnector();
        
        String[] tableColumnsName = {"ID", "Müşteri Adı", "Müşteri Soyadı", "Durum", "Adres", "Tutar"};
        DefaultTableModel dtm = (DefaultTableModel) jTableOrder.getModel();
        dtm.setRowCount(0);
        DefaultTableModel aModel = (DefaultTableModel) jTableOrder.getModel();
        aModel.setColumnIdentifiers(tableColumnsName);
        ResultSet rs = mySqlConnector.runQuery(query);
        try {
            java.sql.ResultSetMetaData rsmd = rs.getMetaData();
            int colNo = rsmd.getColumnCount();
            while (rs.next()) {
                Object[] objects = new Object[colNo];
                for (int i = 0; i < colNo; i++) {
                    objects[i] = rs.getObject(i + 1);
                }
                aModel.addRow(objects);
            }
            mySqlConnector.close();
            jTableOrder.setModel(aModel);
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    
    private void NewCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewCustomerButtonActionPerformed
        NewCustomerPage newCustomerPage = new NewCustomerPage();
        newCustomerPage.setVisible(true);
    }//GEN-LAST:event_NewCustomerButtonActionPerformed

    private void TextCustomerFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextCustomerFirstNameActionPerformed
       
    }//GEN-LAST:event_TextCustomerFirstNameActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String textCustomerFirstName = TextCustomerFirstName.getText();
        String textCustomerLastName = TextCustomerLastName.getText();
        if((textCustomerFirstName.isEmpty() || textCustomerFirstName == null ) && 
           (textCustomerLastName.isEmpty() || textCustomerLastName == null )){
            JOptionPane.showMessageDialog(this, "Lütfen ad veya soyad giriniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
        }else{
            String query = getAllCustomerQuery + " WHERE CustomerFirstName LIKE '%"+textCustomerFirstName+"%' AND CustomerLastName LIKE '%"+textCustomerLastName+"%'";
            refreshCustomerList(query);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void DeleteCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteCustomerButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)jTableCustomer.getModel();
        int selectedRow = jTableCustomer.getSelectedRow();
        int result = -1;
        if(selectedRow >= 0) {
            int input = JOptionPane.showOptionDialog(null, "Bu işlem geri alınamaz. Yine de silinsin mi ?", "Uyarı", JOptionPane.CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
                    if(input == JOptionPane.OK_OPTION){
                        try {
                            String query = "DELETE FROM `customers` WHERE CustomerID=" + Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
                            mySqlConnector.delete(query);
                            JOptionPane.showMessageDialog(this, "Müşteri bilgileri başarıyla silindi !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                            refreshCustomerList(getAllCustomerQuery);
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Bir hatayla karşılastık. Tekrar deneyiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                        }
                    }
        }else{
            JOptionPane.showMessageDialog(this, "Lütfen müşteri seçiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
        }
        
    }//GEN-LAST:event_DeleteCustomerButtonActionPerformed

    private void jClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearButtonActionPerformed
        TextCustomerFirstName.setText(null);
        TextCustomerLastName.setText(null);
        
        refreshCustomerList(getAllCustomerQuery);
    }//GEN-LAST:event_jClearButtonActionPerformed

    private void jRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRefreshButtonActionPerformed
        refreshCustomerList(getAllCustomerQuery);
    }//GEN-LAST:event_jRefreshButtonActionPerformed

    private void TakeOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TakeOrderButtonActionPerformed
                                                          
        DefaultTableModel model = (DefaultTableModel)jTableCustomer.getModel();
        int selectedRow = jTableCustomer.getSelectedRow();
        if(selectedRow >= 0) {
            NewOrderPage newOrderPage = new NewOrderPage(model, selectedRow);
            newOrderPage.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Lütfen müşteri seçiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_TakeOrderButtonActionPerformed

    private void RefreshOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshOrdersButtonActionPerformed
        refreshOrderList(getAllOrdersQuery);
    }//GEN-LAST:event_RefreshOrdersButtonActionPerformed

    private void DeleteOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteOrderButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel)jTableOrder.getModel();
        int selectedRow = jTableOrder.getSelectedRow();
        int result = -1;
        if(selectedRow >= 0) {
            int input = JOptionPane.showOptionDialog(null, "Bu işlem geri alınamaz. Yine de silinsin mi ?", "Uyarı", JOptionPane.CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
                    if(input == JOptionPane.OK_OPTION){
                        try {
                            String query = "DELETE FROM `orders` WHERE orderID=" + Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
                            mySqlConnector.delete(query);
                            JOptionPane.showMessageDialog(this, "Sipariş bilgileri başarıyla silindi !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                            refreshOrderList(getAllOrdersQuery);
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Bir hatayla karşılastık. Tekrar deneyiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                        }
                    }
        }else{
            JOptionPane.showMessageDialog(this, "Lütfen sipariş seçiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_DeleteOrderButtonActionPerformed

    private void DeleteAllOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAllOrdersButtonActionPerformed
        int input = JOptionPane.showOptionDialog(null, "Bu işlem geri alınamaz. Yine de silinsin mi ?", "Uyarı", JOptionPane.CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
        if(input == JOptionPane.OK_OPTION){
            try {
                String query = "DELETE FROM `orders`";
                mySqlConnector.delete(query);
                JOptionPane.showMessageDialog(this, "Bütün sipariş bilgileri başarıyla silindi !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                refreshOrderList(getAllOrdersQuery);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Bir hatayla karşılastık. Tekrar deneyiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
            }
        }
    }//GEN-LAST:event_DeleteAllOrdersButtonActionPerformed

    private void ShowTodayOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowTodayOrdersButtonActionPerformed
        refreshOrderList(getAllOrdersQuery + todayOrderWhere);
    }//GEN-LAST:event_ShowTodayOrdersButtonActionPerformed

    private void OnTheWayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnTheWayButtonActionPerformed
       DefaultTableModel model = (DefaultTableModel)jTableOrder.getModel();
        int selectedRow = jTableOrder.getSelectedRow();
        int result = -1;
        if(selectedRow >= 0) {
            String currentStatus = model.getValueAt(selectedRow, 5).toString();
            if(currentStatus.equals("Yeni Sipariş")){
                int input = JOptionPane.showOptionDialog(null, "Bu işlem geri alınamaz. Yine de silinsin mi ?", "Uyarı", JOptionPane.CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
                    if(input == JOptionPane.OK_OPTION){
                        try {
                            String query = "UPDATE `orders` SET  OrderStatus ='Yola Çıktı' WHERE orderID= " + Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
                            result = mySqlConnector.updateOrInsert(query);
                            if(result != -1){
                                JOptionPane.showMessageDialog(this, "Sipariş bilgileri başarıyla güncellendi !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                                refreshOrderList(getAllOrdersQuery);
                            }else{
                                JOptionPane.showMessageDialog(this, "Bir hatayla karşılastık. Tekrar deneyiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Bir hatayla karşılastık. Tekrar deneyiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                        }
                    }
            }else{
                JOptionPane.showMessageDialog(this, "Sipariş durumu güncellenemez. Sipariş tamamlanmış olabilir veya zaten yolda olabilir. !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Lütfen sipariş seçiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_OnTheWayButtonActionPerformed

    private void DeliveredButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeliveredButtonActionPerformed
       DefaultTableModel model = (DefaultTableModel)jTableOrder.getModel();
        int selectedRow = jTableOrder.getSelectedRow();
        int result = -1;
        if(selectedRow >= 0) {
            String currentStatus = model.getValueAt(selectedRow, 5).toString();
            if(currentStatus.equals("Yola Çıktı")){
                int input = JOptionPane.showOptionDialog(null, "Bu işlem geri alınamaz. Yine de silinsin mi ?", "Uyarı", JOptionPane.CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
                    if(input == JOptionPane.OK_OPTION){
                        try {
                            String query = "UPDATE `orders` SET  OrderStatus ='Teslim Edildi' WHERE orderID= " + Integer.parseInt(model.getValueAt(selectedRow, 0).toString());
                            result = mySqlConnector.updateOrInsert(query);
                            if(result != -1){
                                JOptionPane.showMessageDialog(this, "Sipariş bilgileri başarıyla güncellendi !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                                refreshOrderList(getAllOrdersQuery);
                            }else{
                                JOptionPane.showMessageDialog(this, "Bir hatayla karşılastık. Tekrar deneyiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Bir hatayla karşılastık. Tekrar deneyiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
                        }
                    }
            }else{
                JOptionPane.showMessageDialog(this, "Sipariş durumu güncellenemez. Sipariş tamamlanmış olabilir veya yeni sipariştir.!", "Uyarı",JOptionPane.PLAIN_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "Lütfen sipariş seçiniz !", "Uyarı",JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_DeliveredButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteAllOrdersButton;
    private javax.swing.JButton DeleteCustomerButton;
    private javax.swing.JButton DeleteOrderButton;
    private javax.swing.JButton DeliveredButton;
    private javax.swing.JButton EditCustomerButton;
    private javax.swing.JButton NewCustomerButton;
    private javax.swing.JButton OnTheWayButton;
    private javax.swing.JButton RefreshOrdersButton;
    private javax.swing.JButton ShowTodayOrdersButton;
    private javax.swing.JButton TakeOrderButton;
    private javax.swing.JTextField TextCustomerFirstName;
    private javax.swing.JTextField TextCustomerLastName;
    private javax.swing.JButton jClearButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton jRefreshButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCustomer;
    private javax.swing.JTable jTableOrder;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
